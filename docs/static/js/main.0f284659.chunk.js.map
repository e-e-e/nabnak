{"version":3,"sources":["components/page/page.module.css","components/board/board.module.css","components/card/card.module.css","services/arenaService.ts","components/page/page.tsx","state/async.tsx","views/Home.tsx","components/styled/styled.tsx","components/card/card.tsx","components/channel/channel.tsx","components/board/board.tsx","views/Board.tsx","state/state.tsx","services/authService.ts","index.tsx","App.tsx","components/channel/channel.module.css"],"names":["module","exports","HTML_ERRORS","401","404","500","400","ArenaClient","token","domain","headers","this","Authorization","getJson","params","qs","paginationQueryString","url","userId","slug","data","putJson","ids","id","channelSlug","type","postJson","connectable_type","connectable_id","blockId","del","page","per","attrs","push","join","res","status","json","endpoint","fetch","method","then","body","JSON","stringify","undefined","console","log","Page","children","className","styles","root","InternalAwait","forValue","Placeholder","Error","InternalRecoilAwait","props","value","useRecoilValue","Await","isRecoilValue","HomeView","state","useChannelState","onClick","info","createElementWithClassName","element","React","forwardRef","ref","createElement","a","b","Container","Card","title","provided","innerRef","draggableProps","dragHandleProps","Header","header","Title","ListWrapper","list","ScrollContainer","scrollContainer","DropZone","dropZone","InnerList","items","map","item","index","key","draggableId","dragProvided","dragSnapshot","List","listId","listType","droppableId","dropProvided","dropSnapshot","droppableProps","placeholder","Channel","snapshot","Board","onDragEnd","useCallback","ordered","channels","direction","BoardView","channelId","useParams","setId","useEffect","installChannelState","arena","selectedChannel","atom","default","channelInfo","selector","get","x","useRecoilState","action","setValue","v","catch","e","error","useAsyncApiCall","me","channel","AuthClient","applicationId","applicationSecret","redirectUrl","BASE_URL","window","location","href","code","access_token","App","localStorage","getItem","channelState","path","process","APP_TOKEN","APP_SECRET","authClient","match","search","authorise","login","installApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f284659.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"page_root__2ya0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"board_root__3HvFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"card_root__1sGG3\"};","import {\n  BlockApiType,\n  ChannelApiType,\n  ConnectionApiType,\n  MeApiResponse,\n  PaginationAttributes,\n} from './ArenaApiTypes';\n\nconst HTML_ERRORS: Record<number, string> = {\n  401: 'Unauthorised',\n  404: 'Not found',\n  500: 'Server error',\n  400: 'Bad request',\n};\n\nexport interface ArenaService {\n  me(): Promise<MeApiResponse>;\n  channels(\n    opts: { userId: string } & PaginationAttributes\n  ): Promise<ChannelApiType>;\n  channel(slug: string, params?: PaginationAttributes): Promise<ChannelApiType>;\n  block(id: string): Promise<BlockApiType>;\n  connect(\n    channelSlug: string,\n    id: string,\n    type: 'Block' | 'Channel'\n  ): Promise<ConnectionApiType>;\n}\n\nexport class ArenaClient implements ArenaService {\n  private readonly domain = 'https://api.are.na/v2/';\n  private readonly headers: HeadersInit;\n\n  constructor({ token }: { token?: string | null }) {\n    this.headers = {\n      'Content-Type': 'application/json',\n      Authorization: token ? `Bearer ${token}` : '',\n    };\n  }\n\n  me() {\n    return this.getJson('me');\n  }\n\n  channels(params?: { userId?: string } & PaginationAttributes) {\n    const qs = params ? this.paginationQueryString(params) : '';\n    const url = params?.userId\n      ? `users/${params.userId}/channels`\n      : `channels/`;\n    return this.getJson(`${url}?${qs}`);\n  }\n\n  channelSort(slug: string, data: string[]) {\n    return this.putJson(`channels/${slug}/sort`, { ids: data });\n  }\n\n  channel(slug: string, params?: PaginationAttributes) {\n    const qs = params ? this.paginationQueryString(params) : '';\n    return this.getJson(`channels/${slug}/?${qs}`);\n  }\n\n  block(id: string) {\n    return this.getJson(`blocks/${id}`);\n  }\n\n  connect(channelSlug: string, id: string, type: 'Block' | 'Channel') {\n    return this.postJson(`channels/${channelSlug}/connections`, {\n      connectable_type: type,\n      connectable_id: id,\n    });\n  }\n\n  remove(channelSlug: string, blockId?: string) {\n    const url = blockId\n      ? `channels/${channelSlug}/blocks/${blockId}`\n      : `channels/${channelSlug}`;\n    return this.del(url);\n  }\n\n  private paginationQueryString({ page, per }: PaginationAttributes) {\n    const attrs = [];\n    if (page) attrs.push(`page=${page}`);\n    if (per) attrs.push(`per=${per}`);\n    return attrs.join(';');\n  }\n\n  private process(res: Response) {\n    if (res.status === 200) {\n      return res.json();\n    }\n    throw HTML_ERRORS[res.status] || 'unknown';\n  }\n\n  private async getJson(endpoint: string) {\n    return fetch(`${this.domain}${endpoint}`, {\n      method: 'GET',\n      headers: this.headers,\n    }).then((res: Response) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n      throw HTML_ERRORS[res.status] || 'unknown';\n    });\n  }\n\n  private async putJson(endpoint: string, data?: unknown) {\n    return fetch(`${this.domain}${endpoint}`, {\n      method: 'PUT',\n      headers: this.headers,\n      body: data ? JSON.stringify(data) : undefined,\n    }).then((res) => {\n      console.log(res);\n      return res.json();\n    });\n  }\n  private async postJson(endpoint: string, data?: unknown) {\n    return fetch(`${this.domain}${endpoint}`, {\n      method: 'POST',\n      headers: this.headers,\n      body: data ? JSON.stringify(data) : undefined,\n    }).then((res) => res.json());\n  }\n\n  private async del(endpoint: string) {\n    return fetch(`${this.domain}${endpoint}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    }).then(console.log);\n  }\n}\n","import React from 'react';\nimport styles from './page.module.css';\n\nexport function Page({ children }: React.PropsWithChildren<{}>) {\n  return <div className={styles.root}>{children}</div>;\n}\n","import React, { ComponentType } from 'react';\nimport {\n  isRecoilValue,\n  RecoilState,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil/dist';\n\ntype Empty = { type: 'empty' };\ntype Success<T> = { type: 'success'; value: T };\ntype Pending = { type: 'pending' };\ntype Failed<E> = { type: 'failed'; error: E };\nexport type AsyncValue<T, E = string> =\n  | Empty\n  | Success<T>\n  | Pending\n  | Failed<E>;\n\nexport const isSuccessful = (\n  val: AsyncValue<unknown, unknown>\n): val is Success<unknown> => val.type === 'success';\n\ntype CommonAwaitProps = {\n  Placeholder?: ComponentType<unknown>;\n  Error?: ComponentType<unknown>;\n};\ntype InternalAwaitProps = {\n  forValue: AsyncValue<any, any>;\n} & CommonAwaitProps;\n\ntype RecoilAwaitProps = {\n  forValue: RecoilState<AsyncValue<any, any>>;\n} & CommonAwaitProps;\n\ntype AwaitProps = {\n  forValue: AsyncValue<any, any> | RecoilState<AsyncValue<any, any>>;\n} & CommonAwaitProps;\n\nfunction InternalAwait({\n  forValue,\n  children,\n  Placeholder,\n  Error,\n}: React.PropsWithChildren<InternalAwaitProps>) {\n  switch (forValue.type) {\n    case 'success':\n      return <>{children}</>;\n    case 'empty':\n      return null;\n    case 'pending':\n      return !!Placeholder ? <Placeholder /> : <div>Pending</div>;\n    case 'failed':\n      return !!Error ? <Error /> : <div>Failed</div>;\n  }\n}\n\nfunction InternalRecoilAwait(props: React.PropsWithChildren<RecoilAwaitProps>) {\n  const value = useRecoilValue(props.forValue);\n  return <InternalAwait {...props} forValue={value} />;\n}\n\nexport function Await({\n  forValue,\n  children,\n  Placeholder,\n  Error,\n}: React.PropsWithChildren<AwaitProps>) {\n  return isRecoilValue(forValue) ? (\n    <InternalRecoilAwait\n      forValue={forValue}\n      Placeholder={Placeholder}\n      Error={Error}\n      children={children}\n    />\n  ) : (\n    <InternalAwait\n      forValue={forValue}\n      Placeholder={Placeholder}\n      Error={Error}\n      children={children}\n    />\n  );\n}\n\nexport const useAsyncApiCall = <A extends any[], V, E = string>(\n  action: (...args: A) => Promise<V>,\n  atom: RecoilState<AsyncValue<V, E>>\n) => {\n  // how do we cancel this if the component unmounts or values change?\n  const [value, setValue] = useRecoilState(atom);\n  const cb = React.useCallback(\n    async (...args: A) => {\n      // if value is already pending should we cancel? how?\n      setValue({ type: 'pending' });\n      action(...args)\n        .then((v) => {\n          setValue({ type: 'success', value: v });\n        })\n        .catch((e) => {\n          setValue({ type: 'failed', error: e });\n        });\n    },\n    [action, setValue]\n  );\n  return cb;\n};\n","import React from 'react';\nimport { ChannelState } from '../state/state';\nimport { Await } from '../state/async';\nimport { useLocation } from 'react-router-dom';\n\n\nexport function HomeView({ state }: { state: ChannelState }) {\n  const { fetch } = state.useChannelState();\n\n  return (\n    <div>\n      <h1>Hello</h1>\n      <p>List of Channels</p>\n      <button onClick={fetch}>Press</button>\n      <Await forValue={state.info}>\n        <div>Gotten!!!</div>\n      </Await>\n    </div>\n  );\n}\n","import React, {\n  ClassAttributes,\n  HTMLAttributes,\n  MutableRefObject,\n} from 'react';\n\nexport function createElementWithClassName<\n  P extends HTMLAttributes<T>,\n  T extends HTMLElement\n>(element: keyof React.ReactHTML, className: string) {\n  return React.forwardRef(\n    (\n      props: (ClassAttributes<T> & P) | null,\n      ref: ((instance: T | null) => void) | MutableRefObject<T | null> | null\n    ) =>\n      React.createElement(element, {\n        ...props,\n        className: optionalJoinClassNames(className, props?.className),\n        ref,\n      })\n  );\n}\n\nfunction optionalJoinClassNames(a: string, b?: string) {\n  return !!b ? `${a} ${b}` : a;\n}\n","import React from 'react';\nimport styles from './card.module.css';\nimport { createElementWithClassName } from '../styled/styled';\nimport { DraggableProvided } from 'react-beautiful-dnd';\n\nconst Container = createElementWithClassName('div', styles.root);\n\ntype CardProps = {\n  title: string;\n  provided: DraggableProvided;\n};\n\nexport const Card = ({ title, provided }: CardProps) => {\n  return (\n    <Container\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n    >\n      <div>{title}</div>\n      <div></div>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styles from './channel.module.css';\nimport { Card } from '../card/card';\nimport {\n  Draggable,\n  DraggableProvided,\n  DraggableStateSnapshot,\n  Droppable,\n  DroppableProvided,\n  DroppableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { createElementWithClassName } from '../styled/styled';\n\nconst Container = createElementWithClassName('div', styles.root);\nconst Header = createElementWithClassName('div', styles.header);\nconst Title = createElementWithClassName('h4', styles.title);\n\nconst ListWrapper = createElementWithClassName('div', styles.list);\nconst ScrollContainer = createElementWithClassName(\n  'div',\n  styles.scrollContainer\n);\nconst DropZone = createElementWithClassName('div', styles.dropZone);\n\ntype Item = {\n  id: string;\n  title: string;\n};\n\nfunction InnerList({ items }: { items: Item[] }) {\n  return (\n    <>\n      {items.map((item, index) => (\n        <Draggable key={item.id} draggableId={item.id} index={index}>\n          {(\n            dragProvided: DraggableProvided,\n            dragSnapshot: DraggableStateSnapshot\n          ) => (\n            <Card title={item.title} provided={dragProvided} />\n          )}\n        </Draggable>\n      ))}\n    </>\n  );\n}\n\ntype ListProps = {\n  listId: string;\n  listType: string;\n  items: Item[];\n};\n\nfunction List({ listId, listType, items }: ListProps) {\n  return (\n    <Droppable droppableId={listId} type={listType}>\n      {(\n        dropProvided: DroppableProvided,\n        dropSnapshot: DroppableStateSnapshot\n      ) => (\n        <ListWrapper\n          ref={dropProvided.innerRef}\n          {...dropProvided.droppableProps}\n        >\n          <ScrollContainer>\n            <DropZone>\n              <InnerList items={items} />\n              {dropProvided.placeholder}\n            </DropZone>\n          </ScrollContainer>\n        </ListWrapper>\n      )}\n    </Droppable>\n  );\n}\n\ntype ChannelProps = {\n  index: number;\n  title: string;\n  items: Item[];\n};\n\nexport function Channel({ title, index, items }: ChannelProps) {\n  return (\n    <Draggable draggableId={title} index={index}>\n      {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (\n        <Container ref={provided.innerRef} {...provided.draggableProps}>\n          <Header {...provided.dragHandleProps}>\n            <Title>{title}</Title>\n          </Header>\n          <List listId={title} listType={'BLOCK'} items={items} />\n        </Container>\n      )}\n    </Draggable>\n  );\n}\n","import React from 'react';\nimport styles from './board.module.css';\nimport {\n  DragDropContext,\n  Droppable,\n  DroppableProvided,\n} from 'react-beautiful-dnd';\nimport { Channel } from '../channel/channel';\nimport { createElementWithClassName } from '../styled/styled';\n\ntype BoardProps = {\n  // title: string;\n};\n\nconst Container = createElementWithClassName('div', styles.root);\n\nexport function Board({}: BoardProps) {\n  const onDragEnd = React.useCallback(console.log, []);\n  const ordered = ['a', 'b'];\n  const channels: Record<string, any> = {\n    'a': {\n      title: 'A list',\n      items:[{ id: '1', title: 'Hellao' },{ id: '2', title: 'Heai' }]\n    },\n    'b': {\n      title: 'B list',\n      items:[{ id: '3', title: 'Hello' },{ id: '4', title: 'Hei' }]\n    }\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"board\" type=\"COLUMN\" direction=\"horizontal\">\n        {(provided: DroppableProvided) => (\n          <Container ref={provided.innerRef} {...provided.droppableProps}>\n            {ordered.map((key: string, index: number) => (\n              <Channel\n                key={key}\n                title={key}\n                index={index}\n                items={channels[key].items}\n              />\n            ))}\n            {provided.placeholder}\n          </Container>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Board } from '../components/board/board';\nimport {ChannelState} from \"../state/state\";\nimport {Await} from \"../state/async\";\n\nexport function BoardView({ state }: { state: ChannelState }) {\n  const { channelId } = useParams();\n  const { fetch, setId } = state.useChannelState();\n\n  useEffect(() => {\n    console.log('channelId', channelId)\n    setId(channelId);\n  }, [channelId])\n  return <Await forValue={state.info}><Board/></Await>;\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { ArenaService } from '../services/arenaService';\nimport {\n  atom,\n  selector,\n  RecoilState,\n  useRecoilState,\n  SetterOrUpdater,\n} from 'recoil/dist';\nimport { AsyncValue, isSuccessful, useAsyncApiCall } from './async';\n\ntype UseChannelState = () => {\n  fetch: () => void;\n  id: string | null;\n  setId: SetterOrUpdater<string | null>;\n};\n\nexport type ChannelState = {\n  useChannelState: UseChannelState;\n  info: RecoilState<AsyncValue<string>>;\n};\n\nexport function installChannelState(arena: ArenaService): ChannelState {\n  const selectedChannel = atom<string | null>({\n    key: 'channel-id',\n    default: null,\n  });\n\n  const channelInfo = atom<AsyncValue<string>>({\n    key: 'channel-info',\n    default: { type: 'empty' },\n  });\n\n  const resolved = selector({\n    key: 'new-key',\n    get: ({ get }) => {\n      const x = get(channelInfo);\n      return x && isSuccessful(x) ? x.value : null;\n    },\n  });\n\n  const useChannelState: UseChannelState = () => {\n    const [id, setId] = useRecoilState(selectedChannel);\n    console.log('update id', id);\n    const getChannels = useCallback(async () => {\n      console.log(await arena.me())\n      id && console.log(await arena.channel(id));\n      console.log('id', id);\n      return 'ok';\n    }, [id]);\n    const fetch = useAsyncApiCall(getChannels, channelInfo);\n\n    useEffect(() => { fetch() }, [fetch, id]);\n    return {\n      fetch,\n      setId,\n      id,\n    };\n  };\n\n  return {\n    useChannelState,\n    info: channelInfo,\n  };\n}\n","interface AuthService {\n  login(): void;\n  authorise(code: string): Promise<string>;\n}\n\nexport class AuthClient implements AuthService {\n  private readonly BASE_URL = 'https://dev.are.na/oauth';\n\n  constructor(\n    private readonly applicationId: string,\n    private readonly applicationSecret: string,\n    private readonly redirectUrl: string\n  ) {}\n\n  login() {\n    window.location.href = `${this.BASE_URL}/authorize?client_id=${this.applicationId}&redirect_uri=${this.redirectUrl}&response_type=code`;\n  }\n\n  authorise(code: string): Promise<string> {\n    return fetch(\n      `${this.BASE_URL}/token?client_id=${this.applicationId}&client_secret=${this.applicationSecret}&code=${code}&grant_type=authorization_code&redirect_uri=${this.redirectUrl}`,\n      { method: 'POST' }\n    )\n      .then((res) => res.json())\n      .then((data) => data.access_token);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { installApp } from './App';\n\nconst App = installApp();\n\nApp && ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { ArenaClient } from './services/arenaService';\nimport { Page } from './components/page/page';\nimport { Channel } from './components/channel/channel';\nimport { Board } from './components/board/board';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HomeView } from './views/Home';\nimport { BoardView } from './views/Board';\nimport { RecoilRoot } from 'recoil/dist';\nimport { installChannelState } from './state/state';\nimport { AuthClient } from './services/authService';\n\nexport const installApp = () => {\n  // TODO: sort out authentication\n  const token = window.localStorage.getItem('token');\n  if (!token) {\n    console.log('token', process.env)\n    const APP_TOKEN = process.env.REACT_APP_ARENA_APP_ID;\n    const APP_SECRET = process.env.REACT_APP_ARENA_APP_SECRET;\n    const AUTH_REDIRECT = process.env.REACT_APP_ARENA_APP_REDIRECT;\n    if (APP_TOKEN && APP_SECRET && AUTH_REDIRECT) {\n      const authClient = new AuthClient(APP_TOKEN, APP_SECRET, AUTH_REDIRECT);\n      const match = window.location.search.match(/\\?code=(\\w+)/);\n      console.log('here')\n      const code = match && match[1];\n      if (!code) {\n        console.log('here')\n        authClient.login();\n      } else {\n        authClient.authorise(code).then(console.log);\n      }\n      return;\n    }\n  }\n\n  const arenaClient = new ArenaClient({\n    token,\n  });\n\n  const channelState = installChannelState(arenaClient);\n\n  const App = () => {\n    return (\n      <RecoilRoot>\n        <Page>\n          <Router>\n            <Switch>\n              <Route path=\"/:channelId\">\n                <BoardView state={channelState} />\n              </Route>\n              <Route path=\"/\">\n                <HomeView state={channelState} />\n              </Route>\n            </Switch>\n          </Router>\n        </Page>\n      </RecoilRoot>\n    );\n  };\n  return App;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"channel_root__3aiuM\",\"header\":\"channel_header__2r_H8\",\"title\":\"channel_title__cARcd\",\"list\":\"channel_list__2y60Q\",\"scrollContainer\":\"channel_scrollContainer__3sX_V\",\"dropZone\":\"channel_dropZone__TgumK\"};"],"sourceRoot":""}